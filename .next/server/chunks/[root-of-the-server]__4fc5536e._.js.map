{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///Users/musabkhan/Desktop/Musab/Github/musabkhan/code_review_training/src/app/api/admin-login/route.ts"],"sourcesContent":["export const dynamic = \"force-dynamic\";\nimport { NextRequest, NextResponse } from 'next/server';\nimport { getIronSession, SessionOptions } from 'iron-session';\nimport { isAdminSession } from '@/lib/isAdminSession';\n\nconst ADMIN_PASSWORD = process.env.ADMIN_PASSWORD || 'admin123';\nconst SESSION_COOKIE = 'admin_session';\nconst SESSION_SECRET = process.env.ADMIN_SESSION_SECRET || 'complex_password_at_least_32_characters_long';\n\nexport const sessionOptions: SessionOptions = {\n  cookieName: SESSION_COOKIE,\n  password: SESSION_SECRET,\n  cookieOptions: {\n    maxAge: 60 * 60 * 24, // 1 day\n  // Set secure to false because we're on http (not https)\n    secure: false,\n  },\n};\n\ntype AdminSession = {\n  isAdmin?: boolean;\n};\n\nexport async function POST(request: NextRequest) {\n  console.log('[ADMIN-LOGIN] POST called');\n  let body;\n  try {\n    body = await request.json();\n  } catch (err) {\n    console.log('[ADMIN-LOGIN] Error parsing JSON:', err);\n    return NextResponse.json({ success: false, error: 'Invalid JSON' }, { status: 400 });\n  }\n  const { password, logout } = body;\n  console.log('[ADMIN-LOGIN] password:', password, 'logout:', logout);\n\n  // Prepare the response object you will return\n  const res = NextResponse.json({ success: true });\n  const session = await getIronSession<AdminSession>(request, res, sessionOptions);\n  console.log('[ADMIN-LOGIN] Incoming cookies:', request.cookies.getAll());\n  console.log('[ADMIN-LOGIN] Session before:', session);\n\n  if (logout) {\n    session.destroy();\n    await session.save();\n    console.log('[ADMIN-LOGIN] Session destroyed and saved.');\n    console.log('[ADMIN-LOGIN] Set-Cookie header:', res.headers.get('set-cookie'));\n    return res;\n  }\n\n  if (!password) {\n    console.log('[ADMIN-LOGIN] Missing password');\n    return NextResponse.json({ success: false, error: 'Missing password' }, { status: 400 });\n  }\n  if (password === ADMIN_PASSWORD) {\n    session.isAdmin = true;\n    await session.save();\n    console.log('[ADMIN-LOGIN] Login success. Session after:', session);\n    console.log('[ADMIN-LOGIN] Set-Cookie header:', res.headers.get('set-cookie'));\n    return res;\n  } else {\n    console.log('[ADMIN-LOGIN] Incorrect password');\n    return NextResponse.json({ success: false, error: 'Incorrect password' }, { status: 401 });\n  }\n}\n\nexport async function GET(request: NextRequest) {\n  console.log('[ADMIN-LOGIN] GET called');\n  const session = await getIronSession<AdminSession>(request.cookies as any, sessionOptions);\n  console.log('[ADMIN-LOGIN] Session in GET:', session);\n  if (session.isAdmin) {\n    return NextResponse.json({ authenticated: true });\n  } else {\n    return NextResponse.json({ authenticated: false });\n  }\n}\n\n// Helper for other endpoints to check admin session\n// export async function isAdminSession(request: NextRequest) {\n//   const session = await getIronSession<AdminSession>(request.cookies as any, sessionOptions);\n//   console.log('[ADMIN-LOGIN] isAdminSession:', session);\n//   return !!session.isAdmin;\n// } "],"names":[],"mappings":";;;;;;AACA;AACA;AAFO,MAAM,UAAU;;;AAKvB,MAAM,iBAAiB,QAAQ,GAAG,CAAC,cAAc,IAAI;AACrD,MAAM,iBAAiB;AACvB,MAAM,iBAAiB,QAAQ,GAAG,CAAC,oBAAoB,IAAI;AAEpD,MAAM,iBAAiC;IAC5C,YAAY;IACZ,UAAU;IACV,eAAe;QACb,QAAQ,KAAK,KAAK;QACpB,wDAAwD;QACtD,QAAQ;IACV;AACF;AAMO,eAAe,KAAK,OAAoB;IAC7C,QAAQ,GAAG,CAAC;IACZ,IAAI;IACJ,IAAI;QACF,OAAO,MAAM,QAAQ,IAAI;IAC3B,EAAE,OAAO,KAAK;QACZ,QAAQ,GAAG,CAAC,qCAAqC;QACjD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO;QAAe,GAAG;YAAE,QAAQ;QAAI;IACpF;IACA,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG;IAC7B,QAAQ,GAAG,CAAC,2BAA2B,UAAU,WAAW;IAE5D,8CAA8C;IAC9C,MAAM,MAAM,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;IAAK;IAC9C,MAAM,UAAU,MAAM,CAAA,GAAA,kJAAA,CAAA,iBAAc,AAAD,EAAgB,SAAS,KAAK;IACjE,QAAQ,GAAG,CAAC,mCAAmC,QAAQ,OAAO,CAAC,MAAM;IACrE,QAAQ,GAAG,CAAC,iCAAiC;IAE7C,IAAI,QAAQ;QACV,QAAQ,OAAO;QACf,MAAM,QAAQ,IAAI;QAClB,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC,oCAAoC,IAAI,OAAO,CAAC,GAAG,CAAC;QAChE,OAAO;IACT;IAEA,IAAI,CAAC,UAAU;QACb,QAAQ,GAAG,CAAC;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO;QAAmB,GAAG;YAAE,QAAQ;QAAI;IACxF;IACA,IAAI,aAAa,gBAAgB;QAC/B,QAAQ,OAAO,GAAG;QAClB,MAAM,QAAQ,IAAI;QAClB,QAAQ,GAAG,CAAC,+CAA+C;QAC3D,QAAQ,GAAG,CAAC,oCAAoC,IAAI,OAAO,CAAC,GAAG,CAAC;QAChE,OAAO;IACT,OAAO;QACL,QAAQ,GAAG,CAAC;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO;QAAqB,GAAG;YAAE,QAAQ;QAAI;IAC1F;AACF;AAEO,eAAe,IAAI,OAAoB;IAC5C,QAAQ,GAAG,CAAC;IACZ,MAAM,UAAU,MAAM,CAAA,GAAA,kJAAA,CAAA,iBAAc,AAAD,EAAgB,QAAQ,OAAO,EAAS;IAC3E,QAAQ,GAAG,CAAC,iCAAiC;IAC7C,IAAI,QAAQ,OAAO,EAAE;QACnB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,eAAe;QAAK;IACjD,OAAO;QACL,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,eAAe;QAAM;IAClD;AACF,EAEA,oDAAoD;CACpD,+DAA+D;CAC/D,gGAAgG;CAChG,2DAA2D;CAC3D,8BAA8B;CAC9B,KAAK","debugId":null}}]
}