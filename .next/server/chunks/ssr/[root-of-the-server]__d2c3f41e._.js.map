{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/musabkhan/Desktop/Musab/Github/musabkhan/code_review_training/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/musabkhan/Desktop/Musab/Github/musabkhan/code_review_training/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///Users/musabkhan/Desktop/Musab/Github/musabkhan/code_review_training/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":["file:///Users/musabkhan/Desktop/Musab/Github/musabkhan/code_review_training/src/components/code-review-challenge.tsx"],"sourcesContent":["\nimport { useState, useEffect, useRef, useCallback } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { CheckCircle, XCircle, AlertTriangle, ArrowLeft, Lightbulb, Lock, Unlock, X } from \"lucide-react\"\nimport type { Challenge } from \"@/types/challenge\"\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { oneDark } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport { io, Socket } from 'socket.io-client'\n\nconst SOCKET_URL = process.env.NEXT_PUBLIC_SOCKET_URL || 'http://localhost:4001';\n\n// Simple avatar generator: pick a random emoji\nconst AVATARS = [\"🦊\", \"🐻\", \"🐼\", \"🐸\", \"🐵\", \"🐶\", \"🐱\", \"🦁\", \"🐯\", \"🐨\", \"🐰\", \"🦄\", \"🐙\", \"🐧\", \"🐢\", \"🐦\", \"🐝\", \"🐬\", \"🦋\", \"🐞\"];\nfunction getRandomAvatar() {\n  return AVATARS[Math.floor(Math.random() * AVATARS.length)];\n}\n\n\nfunction UserBar({ name, avatar, score, isAdmin, onAdminLogout }: { name: string; avatar: string; score: number; isAdmin: boolean; onAdminLogout: () => void }) {\n  return (\n    <div className=\"fixed top-4 right-4 z-50 flex items-center gap-3 bg-white/80 shadow rounded-full px-4 py-2 border border-gray-200\">\n      <span className=\"text-2xl select-none\" aria-label=\"avatar\">{avatar}</span>\n      <span className=\"font-medium text-gray-800\">{name}</span>\n      <span className=\"ml-2 px-2 py-1 bg-blue-100 text-blue-700 rounded text-xs font-semibold\">Score: {score}</span>\n      {isAdmin && (\n        <Button size=\"sm\" variant=\"outline\" onClick={onAdminLogout}>Logout Admin</Button>\n      )}\n    </div>\n  );\n}\n\nfunction NameModal({ open, onSubmit }: { open: boolean; onSubmit: (name: string) => void }) {\n  const [input, setInput] = useState(\"\");\n  const [checking, setChecking] = useState(false);\n  const [available, setAvailable] = useState<boolean | null>(null);\n  const [error, setError] = useState(\"\");\n  const debounceRef = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    setAvailable(null);\n    setError(\"\");\n    if (debounceRef.current) clearTimeout(debounceRef.current);\n    if (!input.trim()) {\n      setAvailable(null);\n      setError(\"\");\n      return;\n    }\n    debounceRef.current = setTimeout(() => {\n      checkAvailability(input.trim());\n    }, 400);\n    return () => {\n      if (debounceRef.current) clearTimeout(debounceRef.current);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [input]);\n\n  const checkAvailability = async (name: string) => {\n    setChecking(true);\n    setError(\"\");\n    try {\n      const res = await fetch(\"/api/check-username\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username: name })\n      });\n      const data = await res.json();\n      setAvailable(data.available);\n      if (!data.available) setError(\"Username is already taken\");\n    } catch {\n      setError(\"Could not check username availability\");\n      setAvailable(null);\n    } finally {\n      setChecking(false);\n    }\n  };\n\n  const handleContinue = () => {\n    if (input.trim() && available) onSubmit(input.trim());\n  };\n\n  if (!open) return null;\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/30\">\n      <div className=\"bg-white rounded-lg shadow-lg p-8 w-full max-w-xs flex flex-col items-center gap-4\">\n        <h2 className=\"text-xl font-bold mb-2\">Welcome!</h2>\n        <p className=\"text-gray-600 text-sm mb-2\">Enter your name to get started:</p>\n        <input\n          className=\"border rounded px-3 py-2 w-full focus:outline-none focus:ring\"\n          placeholder=\"Your name\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          onKeyDown={async e => {\n            if (e.key === 'Enter' && input.trim() && available) {\n              onSubmit(input.trim());\n            }\n          }}\n        />\n        {checking && <div className=\"text-xs text-gray-500\">Checking availability...</div>}\n        {error && <div className=\"text-xs text-red-600\">{error}</div>}\n        <Button className=\"w-full mt-2\" onClick={handleContinue} disabled={checking || available !== true}>\n          Continue\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nfunction AdminModal({ open, onSubmit, onClose, error }: { open: boolean, onSubmit: (password: string) => void, onClose: () => void, error?: string }) {\n  const [input, setInput] = useState(\"\");\n  if (!open) return null;\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/30\">\n      <div className=\"bg-white rounded-lg shadow-lg p-8 w-full max-w-xs flex flex-col items-center gap-4 relative\">\n        <button\n          className=\"absolute top-3 right-3 text-gray-400 hover:text-gray-700 focus:outline-none\"\n          onClick={onClose}\n          aria-label=\"Close\"\n          type=\"button\"\n        >\n          <X className=\"h-5 w-5\" />\n        </button>\n        <h2 className=\"text-xl font-bold mb-2\">Admin Login</h2>\n        <p className=\"text-gray-600 text-sm mb-2\">Enter admin password:</p>\n        <input\n          className=\"border rounded px-3 py-2 w-full focus:outline-none focus:ring\"\n          placeholder=\"Password\"\n          type=\"password\"\n          value={input}\n          onChange={e => setInput(e.target.value)}\n          onKeyDown={e => { if (e.key === 'Enter' && input.trim()) onSubmit(input.trim()); }}\n        />\n        {error && <div className=\"text-red-600 text-xs\">{error}</div>}\n        <div className=\"flex gap-2 w-full\">\n          <Button className=\"w-full mt-2\" onClick={() => input.trim() && onSubmit(input.trim())}>Login</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// --- Timer Hook ---\nfunction useChallengeTimer(selectedChallenge: Challenge | null) {\n  const [timer, setTimer] = useState<{ startTime: number; duration: number; isRunning: boolean; isPaused: boolean } | null>(null);\n  const [timeLeft, setTimeLeft] = useState<number>(0);\n  const socketRef = useRef<Socket | null>(null);\n\n  useEffect(() => {\n    if (!selectedChallenge) return;\n    if (!socketRef.current) {\n      socketRef.current = io(SOCKET_URL, { transports: ['websocket'] });\n    }\n    const socket = socketRef.current;\n    const handleTimerUpdate = (data: { challengeId: string; startTime: number; duration: number; isRunning: boolean; isPaused: boolean; remaining?: number }) => {\n      if (data.challengeId === selectedChallenge.id) {\n        setTimer({ startTime: data.startTime, duration: data.duration, isRunning: data.isRunning, isPaused: !!data.isPaused });\n        // If paused, set timeLeft to remaining\n        if (data.isPaused && typeof data.remaining === 'number') {\n          setTimeLeft(Math.max(0, Math.floor(data.remaining / 1000)));\n        }\n      }\n    };\n    socket.on('timer:update', handleTimerUpdate);\n    return () => {\n      socket.off('timer:update', handleTimerUpdate);\n    };\n  }, [selectedChallenge]);\n\n  useEffect(() => {\n    if (!timer) {\n      setTimeLeft(0);\n      return;\n    }\n    if (timer.isPaused) {\n      // Don't tick when paused\n      return;\n    }\n    if (!timer.isRunning) {\n      setTimeLeft(0);\n      return;\n    }\n    const interval = setInterval(() => {\n      const now = Date.now();\n      const end = timer.startTime + timer.duration;\n      setTimeLeft(Math.max(0, Math.floor((end - now) / 1000)));\n    }, 250);\n    return () => clearInterval(interval);\n  }, [timer]);\n\n  return { timer, timeLeft };\n}\n\n// --- Timer Display ---\nfunction TimerDisplay({ timeLeft }: { timeLeft: number }) {\n  const min = Math.floor(timeLeft / 60);\n  const sec = timeLeft % 60;\n  return (\n    <span className=\"inline-block px-3 py-1 bg-blue-100 text-blue-800 rounded font-mono text-lg min-w-[70px] text-center\">\n      {min}:{sec.toString().padStart(2, '0')}\n    </span>\n  );\n}\n\n// --- AdminPanel with Timer Start ---\nexport function AdminPanel({ locks, onToggleLock, challenges = [] }: {\n  locks: Record<string, boolean>,\n  onToggleLock: (id: string) => void,\n  challenges?: Challenge[]\n}) {\n  const [resetting, setResetting] = useState(false);\n  const [resetSuccess, setResetSuccess] = useState(false);\n  const [timerDurations, setTimerDurations] = useState<Record<string, number>>({});\n  const [timers, setTimers] = useState<Record<string, { startTime: number; duration: number; isRunning: boolean; isPaused: boolean; remaining?: number }>>({});\n  const [timeLefts, setTimeLefts] = useState<Record<string, number>>({});\n  const socketRef = useRef<Socket | null>(null);\n\n  // Debug logging\n  console.log('AdminPanel received challenges:', challenges);\n  console.log('AdminPanel challenges length:', challenges?.length);\n\n  useEffect(() => {\n    if (!socketRef.current) {\n      socketRef.current = io(SOCKET_URL, { transports: ['websocket'] });\n    }\n    const socket = socketRef.current;\n    const handleTimerUpdate = (data: { challengeId: string; startTime: number; duration: number; isRunning: boolean; isPaused: boolean; remaining?: number }) => {\n      setTimers(prev => ({\n        ...prev,\n        [data.challengeId]: {\n          startTime: data.startTime,\n          duration: data.duration,\n          isRunning: data.isRunning,\n          isPaused: data.isPaused,\n          ...(typeof data.remaining === 'number' ? { remaining: data.remaining } : {})\n        }\n      }));\n    };\n    socket.on('timer:update', handleTimerUpdate);\n    return () => {\n      socket.off('timer:update', handleTimerUpdate);\n    };\n  }, []);\n\n  // Update ticking timers for admin\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimeLefts(prev => {\n        const updated: Record<string, number> = { ...prev };\n        Object.entries(timers).forEach(([challengeId, timer]) => {\n          if (timer.isPaused && typeof (timer as any).remaining === 'number') {\n            updated[challengeId] = Math.max(0, Math.floor((timer as any).remaining / 1000));\n          } else if (timer.isRunning) {\n            const now = Date.now();\n            const end = timer.startTime + timer.duration;\n            updated[challengeId] = Math.max(0, Math.floor((end - now) / 1000));\n          } else {\n            updated[challengeId] = 0;\n          }\n        });\n        return updated;\n      });\n    }, 250);\n    return () => clearInterval(interval);\n  }, [timers]);\n\n  const handleStartTimer = (challengeId: string) => {\n    const durationMinutes = timerDurations[challengeId] || 5; // default 5 min\n    socketRef.current?.emit('admin:startTimer', { challengeId, duration: durationMinutes * 60 * 1000 });\n  };\n\n  const handleDurationChange = (challengeId: string, value: string) => {\n    const num = Math.max(1, Math.min(60, parseInt(value) || 0));\n    setTimerDurations(prev => ({ ...prev, [challengeId]: num }));\n  };\n\n  const getTimeLeft = (challengeId: string) => {\n    return timeLefts[challengeId] || 0;\n  };\n\n  const handleReset = async () => {\n    if (!window.confirm('Are you sure you want to reset everything? This cannot be undone.')) return;\n    setResetting(true);\n    setResetSuccess(false);\n    const res = await fetch('/api/admin-reset', { method: 'POST' });\n    setResetting(false);\n    if (res.ok) setResetSuccess(true);\n  };\n\n  const handlePauseTimer = (challengeId: string) => {\n    socketRef.current?.emit('admin:pauseTimer', { challengeId });\n  };\n  const handleResumeTimer = (challengeId: string) => {\n    socketRef.current?.emit('admin:resumeTimer', { challengeId });\n  };\n  const handleResetTimer = (challengeId: string) => {\n    socketRef.current?.emit('admin:resetTimer', { challengeId });\n    // Clear local timer state for this challenge so Start Timer is shown again\n    setTimers(prev => {\n      const copy = { ...prev };\n      delete copy[challengeId];\n      return copy;\n    });\n    setTimeLefts(prev => {\n      const copy = { ...prev };\n      delete copy[challengeId];\n      return copy;\n    });\n  };\n\n  // Call this when a challenge is locked\n  useEffect(() => {\n    Object.entries(locks).forEach(([challengeId, locked]) => {\n      if (locked && timers[challengeId]) {\n        handleResetTimer(challengeId);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [locks]);\n\n  return (\n    <div className=\"max-w-4xl mx-auto mt-10 bg-white rounded-lg shadow p-10\">\n      <h2 className=\"text-xl font-bold mb-4 flex items-center gap-2\"><Unlock className=\"h-5 w-5 text-green-600\" /> Admin Challenge Unlocks</h2>\n      <div className=\"mb-6\">\n        <Button variant=\"destructive\" onClick={handleReset} disabled={resetting}>\n          {resetting ? 'Resetting...' : 'Reset Everything'}\n        </Button>\n        {resetSuccess && <span className=\"ml-4 text-green-700 font-semibold\">Database reset!</span>}\n      </div>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        {!challenges || challenges.length === 0 ? (\n          <div className=\"col-span-2 text-center py-8\">\n            <div className=\"text-gray-500\">Loading challenges...</div>\n          </div>\n        ) : (\n          challenges.map((challenge) => {\n            const isLocked = locks[challenge.id] !== false; // default locked\n            const timeLeft = getTimeLeft(challenge.id);\n            const timer = timers[challenge.id];\n            return (\n              <Card key={challenge.id}>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    {isLocked ? <Lock className=\"h-4 w-4 text-gray-400\" /> : <Unlock className=\"h-4 w-4 text-green-500\" />}\n                    {challenge.title}\n                  </CardTitle>\n                  <CardDescription>{challenge.description}</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"flex flex-col gap-2\">\n                    <div className=\"flex flex-wrap items-center gap-2 justify-between\">\n                      <div className=\"flex items-center gap-2\">\n                        <Button\n                          variant={!isLocked ? \"destructive\" : \"outline\"}\n                          className={isLocked ? \"border-green-600 text-green-700 hover:bg-green-50 hover:text-green-900\" : \"\"}\n                          onClick={() => onToggleLock(challenge.id)}\n                        >\n                          {isLocked ? \"Unlock\" : \"Lock\"}\n                        </Button>\n                        {!isLocked && (!timer || (!timer.isRunning && !timer.isPaused)) && (\n                          <input\n                            type=\"number\"\n                            min={1}\n                            max={60}\n                            value={timerDurations[challenge.id] || 5}\n                            onChange={e => handleDurationChange(challenge.id, e.target.value)}\n                            className=\"border rounded px-2 py-1 w-20 text-sm\"\n                            placeholder=\"Minutes\"\n                          />\n                        )}\n                      </div>\n                      {!isLocked && (\n                        <div className=\"flex items-center gap-2\">\n                          {timer && timer.isRunning && !timer.isPaused ? (\n                            <>\n                              <Button variant=\"secondary\" onClick={() => handlePauseTimer(challenge.id)}>\n                                Pause Timer\n                              </Button>\n                              <Button variant=\"outline\" onClick={() => handleResetTimer(challenge.id)}>\n                                Reset Timer\n                              </Button>\n                            </>\n                          ) : timer && timer.isPaused ? (\n                            <>\n                              <Button variant=\"default\" onClick={() => handleResumeTimer(challenge.id)}>\n                                Resume Timer\n                              </Button>\n                              <Button variant=\"outline\" onClick={() => handleResetTimer(challenge.id)}>\n                                Reset Timer\n                              </Button>\n                            </>\n                          ) : (\n                            <Button variant=\"default\" onClick={() => handleStartTimer(challenge.id)}>\n                              Start Timer\n                            </Button>\n                          )}\n                          {/* Timer display for admin: show if running or paused and time left > 0 */}\n                          {(timer && (timer.isRunning || timer.isPaused) && timeLeft > 0) && <TimerDisplay timeLeft={timeLeft} />}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction Leaderboard({ currentUser }: { currentUser: { name: string; avatar: string; score: number } }) {\n  const [users, setUsers] = useState<{ name: string; avatar: string; score: number }[]>([]);\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n\n  // Fetch leaderboard on mount and every 5 seconds\n  useEffect(() => {\n    const fetchLeaderboard = () => {\n      fetch('/api/leaderboard')\n        .then(res => res.json())\n        .then(setUsers);\n    };\n    fetchLeaderboard();\n    intervalRef.current = setInterval(fetchLeaderboard, 5000);\n    return () => { if (intervalRef.current) clearInterval(intervalRef.current); };\n  }, []);\n\n  // If current user is not in the top, show them at the bottom\n  const inTop = users.some(u => u.name === currentUser.name);\n  const displayUsers = inTop ? users : [...users, currentUser];\n\n  // Medal icons for top 3\n  const medalIcons = [\n    <span key=\"gold\" aria-label=\"1st\" className=\"text-2xl mr-2\">🥇</span>,\n    <span key=\"silver\" aria-label=\"2nd\" className=\"text-2xl mr-2\">🥈</span>,\n    <span key=\"bronze\" aria-label=\"3rd\" className=\"text-2xl mr-2\">🥉</span>,\n  ];\n\n  return (\n    <div className=\"bg-white rounded-2xl shadow-lg p-6 w-full max-w-md mx-auto mt-6 md:mt-0 md:ml-8 border border-gray-100\">\n      <h3 className=\"text-2xl font-extrabold mb-5 text-center flex items-center justify-center gap-2 tracking-tight\">\n        <span>🏆</span> Leaderboard\n      </h3>\n      <ul className=\"space-y-2\">\n        {displayUsers.map((user, idx) => {\n          const isCurrent = user.name === currentUser.name;\n          const isTop5 = idx < 5;\n          let positionIcon = null;\n          let positionClass = \"\";\n          let badge = null;\n\n          if (idx < 3) {\n            positionIcon = medalIcons[idx];\n            positionClass = [\n              \"bg-gradient-to-r from-yellow-100 to-yellow-50 border-yellow-300\",\n              \"bg-gradient-to-r from-gray-200 to-gray-50 border-gray-300\",\n              \"bg-gradient-to-r from-amber-200 to-amber-50 border-amber-300\"\n            ][idx];\n          } else if (isTop5) {\n            badge = (\n              <span className=\"ml-2 px-2 py-0.5 bg-blue-100 text-blue-700 rounded-full text-xs font-semibold border border-blue-200\">Top 5</span>\n            );\n            positionClass = \"bg-blue-50 border-blue-200\";\n          }\n\n          return (\n            <li\n              key={user.name}\n              className={`flex items-center justify-between px-4 py-3 rounded-xl border transition-all ${positionClass} ${isCurrent && !isTop5 ? \"ring-2 ring-blue-400 bg-blue-50 font-bold\" : \"\"} ${isCurrent ? \"shadow-md\" : \"\"}`}\n              style={{ boxShadow: isCurrent ? '0 2px 8px 0 rgba(59,130,246,0.08)' : undefined }}\n            >\n              <div className=\"flex items-center gap-3\">\n                {positionIcon}\n                <span className=\"text-xl select-none\" aria-label=\"avatar\">{user.avatar}</span>\n                <span className={`truncate max-w-[120px] text-base ${isCurrent ? \"text-blue-900\" : \"text-gray-800\"}`}>{user.name}</span>\n                {badge}\n                {isCurrent && !isTop5 && (\n                  <span className=\"ml-2 px-2 py-0.5 bg-blue-200 text-blue-900 rounded-full text-xs font-semibold border border-blue-300\">You</span>\n                )}\n              </div>\n              <span className={`text-lg font-bold ${idx === 0 ? \"text-yellow-600\" : idx === 1 ? \"text-gray-500\" : idx === 2 ? \"text-amber-700\" : \"text-blue-700\"}`}>{user.score}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\n// Resizable container for the challenge card\nfunction ResizableCard({ children, defaultWidth = 0 }: { children: React.ReactNode, defaultWidth?: number }) {\n  const [width, setWidth] = useState(defaultWidth); // Use defaultWidth as initial value\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [dragging, setDragging] = useState(false);\n\n  const startDrag = useCallback((e: React.MouseEvent) => {\n    setDragging(true);\n    document.body.style.cursor = \"ew-resize\";\n  }, []);\n\n  const onDrag = useCallback((e: MouseEvent) => {\n    if (!dragging || !containerRef.current) return;\n    const rect = containerRef.current.getBoundingClientRect();\n    const minWidth = 320;\n    const maxWidth = 900;\n    let newWidth = e.clientX - rect.left;\n    newWidth = Math.max(minWidth, Math.min(maxWidth, newWidth));\n    setWidth(newWidth);\n  }, [dragging]);\n\n  const stopDrag = useCallback(() => {\n    setDragging(false);\n    document.body.style.cursor = \"\";\n  }, []);\n\n  useEffect(() => {\n    if (!dragging) return;\n    const move = (e: MouseEvent) => onDrag(e);\n    const up = () => stopDrag();\n    window.addEventListener(\"mousemove\", move);\n    window.addEventListener(\"mouseup\", up);\n    return () => {\n      window.removeEventListener(\"mousemove\", move);\n      window.removeEventListener(\"mouseup\", up);\n    };\n  }, [dragging, onDrag, stopDrag]);\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"relative bg-transparent\"\n      style={{ width: width ? width : undefined, minWidth: 320, maxWidth: 900 }}\n    >\n      <div>{children}</div>\n      <div\n        className=\"absolute top-0 right-0 h-full w-2 cursor-ew-resize z-20 flex items-center group\"\n        onMouseDown={startDrag}\n        style={{ userSelect: \"none\" }}\n      >\n        <div className=\"w-1 h-16 bg-gray-300 rounded-full opacity-60 group-hover:opacity-100 transition-opacity\" />\n      </div>\n    </div>\n  );\n}\n\n// --- ChallengeTimer component ---\nfunction ChallengeTimer({ selectedChallenge }: { selectedChallenge: Challenge }) {\n  const { timeLeft } = useChallengeTimer(selectedChallenge);\n\n  if (timeLeft > 0) {\n    return <TimerDisplay timeLeft={timeLeft} />;\n  }\n\n  // Show \"No Timer\" state when no timer is running\n  return (\n    <span className=\"inline-block px-3 py-1 bg-gray-100 text-gray-600 rounded font-mono text-lg min-w-[70px] text-center\">\n      No Timer\n    </span>\n  );\n}\n\n// Add a hook to get all running/paused timers for the challenge list\nfunction useAllChallengeTimers() {\n  const [timers, setTimers] = useState<Record<string, { startTime: number; duration: number; isRunning: boolean; isPaused: boolean; remaining?: number }>>({});\n  const [timeLefts, setTimeLefts] = useState<Record<string, number>>({});\n  const socketRef = useRef<Socket | null>(null);\n\n  useEffect(() => {\n    if (!socketRef.current) {\n      socketRef.current = io(SOCKET_URL, { transports: ['websocket'] });\n    }\n    const socket = socketRef.current;\n    const handleTimerUpdate = (data: { challengeId: string; startTime: number; duration: number; isRunning: boolean; isPaused: boolean; remaining?: number }) => {\n      setTimers(prev => ({ ...prev, [data.challengeId]: data }));\n    };\n    socket.on('timer:update', handleTimerUpdate);\n    return () => {\n      socket.off('timer:update', handleTimerUpdate);\n    };\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimeLefts(prev => {\n        const updated: Record<string, number> = { ...prev };\n        Object.entries(timers).forEach(([challengeId, timer]) => {\n          if (timer.isPaused && typeof (timer as any).remaining === 'number') {\n            updated[challengeId] = Math.max(0, Math.floor((timer as any).remaining / 1000));\n          } else if (timer.isRunning) {\n            const now = Date.now();\n            const end = timer.startTime + timer.duration;\n            updated[challengeId] = Math.max(0, Math.floor((end - now) / 1000));\n          } else {\n            updated[challengeId] = 0;\n          }\n        });\n        return updated;\n      });\n    }, 250);\n    return () => clearInterval(interval);\n  }, [timers]);\n\n  return { timers, timeLefts };\n}\n\n// Utility to generate dynamic lab URL\nfunction getDynamicLabUrl(labPath: string) {\n  if (typeof window === 'undefined') return '';\n\n  // If it's already a full URL (starts with http:// or https://), return as is\n  if (labPath.startsWith('http://') || labPath.startsWith('https://')) {\n    return labPath;\n  }\n\n  // If it's a relative path, construct the full URL with current hostname and port 8888\n  const { protocol, hostname } = window.location;\n  return `${protocol}//${hostname}:8888${labPath}`;\n}\n\nexport default function CodeReviewChallenge() {\n  // User state\n  const [user, setUser] = useState({ name: \"\", avatar: \"\", score: 0 });\n  const [showNameModal, setShowNameModal] = useState(false);\n\n  // Admin state\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [showAdminModal, setShowAdminModal] = useState(false);\n  const [adminError, setAdminError] = useState(\"\");\n\n  // Challenge lock state (persisted via API)\n  const [locks, setLocks] = useState<Record<string, boolean>>({});\n\n  // Challenges state - dynamically fetched\n  const [challenges, setChallenges] = useState<Challenge[]>([]);\n  const [challengesLoading, setChallengesLoading] = useState(true);\n\n  // Debug challenges state changes\n  useEffect(() => {\n    console.log('Challenges state changed:', {\n      challengesLength: challenges.length,\n      challengesLoading,\n      challenges: challenges\n    });\n  }, [challenges, challengesLoading]);\n\n  // Challenge state\n  const [selectedChallenge, setSelectedChallenge] = useState<Challenge | null>(null)\n  const [selectedLines, setSelectedLines] = useState<number[]>([])\n  const [submitted, setSubmitted] = useState(false)\n  const [showResults, setShowResults] = useState(false)\n  const [showHints, setShowHints] = useState(false)\n  const [alreadySolved, setAlreadySolved] = useState(false);\n  const [flagAlreadySolved, setFlagAlreadySolved] = useState(false);\n\n  // Track if the last submission was correct\n  const [lastSubmissionCorrect, setLastSubmissionCorrect] = useState<boolean | null>(null);\n\n  // Attempts state\n  const [attemptsUsed, setAttemptsUsed] = useState(0);\n  const [attemptsRemaining, setAttemptsRemaining] = useState(4);\n\n  // Open Lab state\n  const [openLabChallenge, setOpenLabChallenge] = useState<string | null>(null);\n  const [flagInput, setFlagInput] = useState(\"\");\n  const [flagStatus, setFlagStatus] = useState<{ status: 'idle' | 'loading' | 'success' | 'error' | 'already'; message?: string }>({ status: 'idle' });\n\n  // --- Flag submission state for challenge view ---\n  const [flagChallengeLoading, setFlagChallengeLoading] = useState(false);\n  const [flagChallengeStatus, setFlagChallengeStatus] = useState<{ status: 'idle' | 'loading' | 'success' | 'error' | 'already'; message?: string }>({ status: 'idle' });\n\n  // Move this hook call here so it's always called, before any early returns\n  const { timers: allTimers, timeLefts: allTimeLefts } = useAllChallengeTimers();\n\n  // On mount, load user/admin from localStorage, and fetch locks from API\n  useEffect(() => {\n    const stored = localStorage.getItem(\"crc_user\");\n    if (stored) {\n      const parsed = JSON.parse(stored);\n      // Fetch actual score from backend\n      fetch('/api/leaderboard')\n        .then(res => res.json())\n        .then(users => {\n          const found = users.find((u: any) => u.name === parsed.name);\n          setUser({\n            name: parsed.name,\n            avatar: parsed.avatar,\n            score: found ? found.score : 0,\n          });\n        });\n    } else setShowNameModal(true);\n    const admin = localStorage.getItem(\"crc_admin\");\n    setIsAdmin(admin === \"true\");\n    // Fetch locks from API\n    fetch('/api/challenge-locks')\n      .then(res => res.json())\n      .then(data => setLocks(data));\n\n    // Fetch challenges from API\n    const fetchChallenges = async () => {\n      try {\n        setChallengesLoading(true);\n        console.log('Fetching challenges...');\n\n        // Test the API directly\n        const testResponse = await fetch('/api/admin/challenges');\n        console.log('Test response status:', testResponse.status);\n        console.log('Test response ok:', testResponse.ok);\n\n        const res = await fetch('/api/admin/challenges');\n        console.log('Challenges response status:', res.status);\n        console.log('Challenges response headers:', Object.fromEntries(res.headers.entries()));\n        if (res.ok) {\n          const data = await res.json();\n          console.log('Challenges data:', data);\n          console.log('Challenges data length:', data.length);\n          setChallenges(data);\n        } else {\n          const errorText = await res.text();\n          console.error('Failed to fetch challenges:', res.status, errorText);\n        }\n      } catch (error) {\n        console.error('Error fetching challenges:', error);\n      } finally {\n        setChallengesLoading(false);\n        console.log('Challenges loading finished');\n      }\n    };\n\n    fetchChallenges();\n  }, []); // Empty dependency array - only run once on mount\n\n  // Save user and admin state to localStorage\n  useEffect(() => {\n    if (user.name) localStorage.setItem(\"crc_user\", JSON.stringify(user));\n  }, [user]);\n  useEffect(() => {\n    localStorage.setItem(\"crc_admin\", isAdmin ? \"true\" : \"false\");\n  }, [isAdmin]);\n\n  const handleNameSubmit = (name: string) => {\n    setUser({ name, avatar: getRandomAvatar(), score: 0 });\n    setShowNameModal(false);\n  };\n\n  // Admin login/logout logic\n  const handleAdminLogin = () => {\n    setShowAdminModal(true);\n    setAdminError(\"\");\n  };\n  const handleAdminLogout = () => {\n    setIsAdmin(false);\n  };\n  const handleAdminModalSubmit = (password: string) => {\n    if (password === \"admin123\") {\n      setIsAdmin(true);\n      setShowAdminModal(false);\n      setAdminError(\"\");\n    } else {\n      setAdminError(\"Incorrect password\");\n    }\n  };\n\n  // Challenge lock/unlock logic (persist to API)\n  const handleToggleLock = async (id: string) => {\n    // If currently locked (undefined or true), unlock (set to false). If unlocked (false), lock (set to true).\n    const isLocked = locks[id] !== false;\n    const newLocked = !isLocked;\n    setLocks(prev => ({ ...prev, [id]: newLocked })); // Optimistic update\n    await fetch('/api/challenge-locks', {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ id, locked: newLocked })\n    });\n    // Reset timer if locking the challenge\n    if (newLocked && isAdmin) {\n      const socket = io(SOCKET_URL, { transports: ['websocket'] });\n      socket.emit('admin:resetTimer', { challengeId: id });\n      socket.disconnect();\n    }\n    // Optionally, re-fetch locks from API for consistency\n    // const data = await fetch(\"/api/challenge-locks\").then(res => res.json());\n    // setLocks(data);\n  };\n\n  const handleSelectChallenge = (challenge: Challenge) => {\n    // By default, all challenges are locked unless explicitly unlocked\n    const isLocked = locks[challenge.id] !== false;\n    if (!isAdmin && isLocked) return;\n    setSelectedChallenge(challenge)\n    setSelectedLines([])\n    setSubmitted(false)\n    setShowResults(false)\n    setShowHints(false)\n    setFlagInput(\"\");\n    setFlagChallengeStatus({ status: 'idle' });\n  }\n\n  // Check if user has already solved the selected challenge (challenge submission)\n  useEffect(() => {\n    const checkAlreadySolved = async () => {\n      if (selectedChallenge && user.name) {\n        const res = await fetch('/api/challenge-status', {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            name: user.name,\n            challengeId: selectedChallenge.id,\n          }),\n        });\n        const data = await res.json();\n        setAlreadySolved(!!data.solved);\n      } else {\n        setAlreadySolved(false);\n      }\n    };\n    checkAlreadySolved();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedChallenge, user.name]);\n\n  // Check if user has already solved the flag for the selected challenge\n  useEffect(() => {\n    const checkFlagAlreadySolved = async () => {\n      if (selectedChallenge && user.name) {\n        const res = await fetch('/api/flag-status', {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            name: user.name,\n            challengeId: selectedChallenge.id,\n          }),\n        });\n        const data = await res.json();\n        setFlagAlreadySolved(!!data.solved);\n      } else {\n        setFlagAlreadySolved(false);\n      }\n    };\n    checkFlagAlreadySolved();\n  }, [selectedChallenge, user.name]);\n\n  // Fetch attempts when challenge or user changes\n  useEffect(() => {\n    const fetchAttempts = async () => {\n      if (selectedChallenge && user.name) {\n        const res = await fetch('/api/challenge-attempts', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ name: user.name, challengeId: selectedChallenge.id })\n        });\n        const data = await res.json();\n        setAttemptsUsed(data.attemptsUsed);\n        setAttemptsRemaining(data.attemptsRemaining);\n      } else {\n        setAttemptsUsed(0);\n        setAttemptsRemaining(4);\n      }\n    };\n    fetchAttempts();\n  }, [selectedChallenge, user.name]);\n\n  const handleSubmit = async () => {\n    setSubmitted(true);\n    setShowResults(true);\n    if (selectedChallenge && selectedLines.length > 0) {\n      // Send selectedLines array to backend\n      const res = await fetch('/api/submit-challenge', {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name: user.name,\n          avatar: user.avatar,\n          challengeId: selectedChallenge.id,\n          selectedLines: selectedLines,\n        }),\n      });\n      const data = await res.json();\n      // Determine correctness: all vulnerable lines must be selected, and no extra lines\n      const vulnerableLines = selectedChallenge.vulnerableLines;\n      const selectedSet = new Set(selectedLines);\n      const vulnerableSet = new Set(vulnerableLines);\n      const allCorrect =\n        selectedLines.length === vulnerableLines.length &&\n        selectedLines.every((line) => vulnerableSet.has(line));\n      setLastSubmissionCorrect(allCorrect);\n      if (allCorrect) setAlreadySolved(true);\n      else setAlreadySolved(false);\n      // Update attempts from backend response\n      if (typeof data.attemptsUsed === 'number') setAttemptsUsed(data.attemptsUsed);\n      if (typeof data.attemptsRemaining === 'number') setAttemptsRemaining(data.attemptsRemaining);\n      // Optionally, use data.feedback for per-line feedback if needed\n      // Optionally, update score or attempts from backend response\n      // setUser(u => ({ ...u, score: data.score }));\n      // setAttemptsUsed(data.attemptsUsed);\n      // setAttemptsRemaining(data.attemptsRemaining);\n    }\n  }\n\n  const handleReset = () => {\n    setSelectedLines([])\n    setSubmitted(false)\n    setShowResults(false)\n    setShowHints(false)\n  }\n\n  const handleBackToChallenges = () => {\n    setSelectedChallenge(null)\n    setSelectedLines([])\n    setSubmitted(false)\n    setShowResults(false)\n    setShowHints(false)\n    setOpenLabChallenge(null)\n    setFlagInput(\"\");\n    setFlagChallengeStatus({ status: 'idle' });\n  }\n\n  const toggleLine = (lineNumber: number) => {\n    if (submitted) return;\n    const maxSelectable = selectedChallenge?.maxSelectableLines ?? 1;\n    if (!selectedLines.includes(lineNumber) && selectedLines.length >= maxSelectable) {\n      // Optionally, show a warning or ignore further selection\n      return;\n    }\n    setSelectedLines((prev) =>\n      prev.includes(lineNumber) ? prev.filter((l) => l !== lineNumber) : [...prev, lineNumber]\n    );\n  }\n\n  const getLineStatus = (lineNumber: number) => {\n    if (!showResults || !selectedChallenge) return null;\n    const isSelected = selectedLines.includes(lineNumber);\n    const isVulnerable = selectedChallenge.vulnerableLines.includes(lineNumber);\n    if (isSelected && isVulnerable) return \"correct\";\n    if (isSelected && !isVulnerable) return \"incorrect\";\n    return null;\n  }\n\n  // Helper to refresh solved states for both challenge and flag\n  const refreshSolvedStates = useCallback(() => {\n    // Check if user has already solved the selected challenge (challenge submission)\n    if (selectedChallenge && user.name) {\n      fetch('/api/challenge-status', {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name: user.name,\n          challengeId: selectedChallenge.id,\n        }),\n      })\n        .then(res => res.json())\n        .then(data => setAlreadySolved(!!data.solved));\n\n      fetch('/api/flag-status', {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name: user.name,\n          challengeId: selectedChallenge.id,\n        }),\n      })\n        .then(res => res.json())\n        .then(data => setFlagAlreadySolved(!!data.solved));\n    }\n  }, [selectedChallenge, user.name]);\n\n  // Show name modal if needed\n  if (showNameModal) {\n    return <NameModal open={showNameModal} onSubmit={handleNameSubmit} />\n  }\n\n  // Show admin modal if needed\n  if (showAdminModal) {\n    return <AdminModal open={showAdminModal} onSubmit={handleAdminModalSubmit} onClose={() => setShowAdminModal(false)} error={adminError} />\n  }\n\n  // Show admin panel if admin\n  if (isAdmin && !selectedChallenge) {\n    console.log('Rendering admin panel with:', {\n      challengesLoading,\n      challengesLength: challenges?.length,\n      challenges: challenges\n    });\n    return (\n      <>\n        <UserBar name={user.name} avatar={user.avatar} score={user.score} isAdmin={isAdmin} onAdminLogout={handleAdminLogout} />\n        {challengesLoading ? (\n          <div className=\"min-h-screen bg-gray-50 p-4 flex items-center justify-center\">\n            <div className=\"text-gray-500\">Loading admin panel...</div>\n          </div>\n        ) : (\n          <AdminPanel locks={locks} onToggleLock={handleToggleLock} challenges={challenges} />\n        )}\n      </>\n    );\n  }\n\n  // Show challenge selection if no challenge is selected\n  if (!selectedChallenge) {\n    return (\n      <>\n        <UserBar name={user.name} avatar={user.avatar} score={user.score} isAdmin={isAdmin} onAdminLogout={handleAdminLogout} />\n        <div className=\"min-h-screen bg-gray-50 p-4\">\n          <div className=\"max-w-4xl mx-auto space-y-6\">\n            <div className=\"text-center mb-8\">\n              <h1 className=\"text-3xl font-bold text-center\">Code Review Challenge</h1>\n              <p className=\"text-gray-600 text-center\">Choose a challenge to test your skills</p>\n              <div className=\"mt-2 text-sm text-gray-500\">\n                💡 <strong>Timer Info:</strong> Timers can be started from the admin panel. When active, they appear in the bottom-right corner of challenge cards.\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {challengesLoading ? (\n                <div className=\"col-span-2 text-center py-8\">\n                  <div className=\"text-gray-500\">Loading challenges...</div>\n                </div>\n              ) : challenges.length === 0 ? (\n                <div className=\"col-span-2 text-center py-8\">\n                  <div className=\"text-gray-500 mb-4\">No challenges found.</div>\n                </div>\n              ) : (\n                challenges.map((challenge) => {\n                  // By default, all challenges are locked unless explicitly unlocked\n                  const locked = locks[challenge.id] !== false;\n                  const timer = allTimers[challenge.id];\n                  const timeLeft = allTimeLefts[challenge.id] || 0;\n                  const isOpenLab = openLabChallenge === challenge.id;\n                  // Special style for DEMO challenge\n                  const demoCardClass = challenge.id === 'DEMO' ? 'bg-yellow-50 border-yellow-400 ring-2 ring-yellow-300' : '';\n                  return (\n                    <Card key={challenge.id} className={`relative transition-shadow ${demoCardClass} ${locked && !isAdmin ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer hover:shadow-lg'}`} onClick={() => handleSelectChallenge(challenge)}>\n                      {/* Timer at bottom right if running or paused */}\n                      {(timer && (timer.isRunning || timer.isPaused) && timeLeft > 0) && (\n                        <div className=\"absolute bottom-3 right-3 z-10\">\n                          <TimerDisplay timeLeft={timeLeft} />\n                        </div>\n                      )}\n                      {/* Show \"No Timer\" when no timer is running */}\n                      {(!timer || (!timer.isRunning && !timer.isPaused) || timeLeft === 0) && (\n                        <div className=\"absolute bottom-3 right-3 z-10\">\n                          <span className=\"inline-block px-2 py-1 bg-gray-100 text-gray-600 rounded text-xs font-mono\">\n                            No Timer\n                          </span>\n                        </div>\n                      )}\n                      <CardHeader>\n                        <CardTitle className=\"flex items-center gap-2\">\n                          <AlertTriangle className=\"h-5 w-5 text-orange-500\" />\n                          {challenge.title}\n                          {locked && <Lock className=\"h-4 w-4 text-gray-400 ml-2\" />}\n                        </CardTitle>\n                        <CardDescription className=\"mt-2\">{challenge.description}</CardDescription>\n                      </CardHeader>\n                      <CardContent className=\"flex flex-col gap-2 items-start justify-between\">\n                        {locked && !isAdmin && <span className=\"ml-2 text-xs text-gray-400\">Locked</span>}\n                        {!locked && !isOpenLab && (\n                          <Button variant=\"default\" onClick={() => { setOpenLabChallenge(challenge.id); setFlagInput(\"\"); setFlagStatus({ status: 'idle' }); }}>\n                            Open\n                          </Button>\n                        )}\n                        {!locked && isOpenLab && (\n                          <div className=\"w-full flex flex-col gap-2\">\n                            {flagStatus.status === 'success' && <div className=\"text-green-700 text-xs font-semibold\">{flagStatus.message}</div>}\n                            {flagStatus.status === 'already' && <div className=\"text-blue-700 text-xs font-semibold\">{flagStatus.message}</div>}\n                            {flagStatus.status === 'error' && <div className=\"text-red-600 text-xs font-semibold\">{flagStatus.message}</div>}\n                          </div>\n                        )}\n                      </CardContent>\n                    </Card>\n                  );\n                })\n              )}\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n\n  // Challenge view\n  const codeLines = selectedChallenge.code.split(\"\\n\")\n  const correctAnswers = selectedLines.filter((line) => selectedChallenge.vulnerableLines.includes(line)).length\n  const totalVulnerabilities = selectedChallenge.vulnerableLines.length\n  const incorrectSelections = selectedLines.filter((line) => !selectedChallenge.vulnerableLines.includes(line)).length\n\n  // In the challenge view, add a check for locked\n  const isLocked = locks[selectedChallenge.id] !== false;\n\n  return (\n    <>\n      <UserBar name={user.name} avatar={user.avatar} score={user.score} isAdmin={isAdmin} onAdminLogout={handleAdminLogout} />\n      <div className=\"min-h-screen bg-gray-50 p-4\">\n        <div className=\"max-w-6xl mx-auto space-y-6\">\n          <div className=\"flex flex-col md:flex-row md:items-start md:gap-6\">\n            <div className=\"flex-1\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-4\">\n                  <Button variant=\"outline\" onClick={handleBackToChallenges}>\n                    <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                    Back to Challenges\n                  </Button>\n                </div>\n                <div className=\"w-32\"></div> {/* Spacer for centering */}\n              </div>\n              <ResizableCard defaultWidth={800}>\n                <Card className=\"mt-10\">\n                  <CardHeader>\n                    <div className=\"flex justify-between w-full items-center\">\n                      <div>\n                        <CardTitle className=\"flex items-center gap-2\">\n                          <AlertTriangle className=\"h-5 w-5 text-orange-500\" />\n                          {selectedChallenge.title}\n                        </CardTitle>\n                        <CardDescription className=\"mt-2 text-sm\">{selectedChallenge.description}</CardDescription>\n                      </div>\n                      <span className=\"flex bg-blue-100 text-blue-800 text-sm font-semibold px-2 py-1 w-28 rounded-full items-center\">Attempts: {attemptsRemaining}</span>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"flex items-center gap-4 mb-4\">\n                      {/* Timer display for all users and admin */}\n                      <ChallengeTimer selectedChallenge={selectedChallenge} />\n                    </div>\n                    <div className=\"bg-gray-900 rounded-lg p-4 overflow-x-auto\">\n                      <SyntaxHighlighter\n                        language=\"javascript\"\n                        style={oneDark}\n                        customStyle={{ background: 'transparent', fontSize: 14, margin: 0, padding: 0 }}\n                        showLineNumbers\n                        wrapLines\n                        lineProps={(lineNumber: number) => {\n                          const status = getLineStatus(lineNumber);\n                          const isSelected = selectedLines.includes(lineNumber);\n                          let className = \"flex items-center cursor-pointer transition-colors \";\n                          if (isSelected && !submitted) className += \"bg-blue-900/50 hover:bg-blue-900/70 \";\n                          if (submitted && status === \"correct\") className += \"bg-green-900/50 \";\n                          if (submitted && status === \"incorrect\") className += \"bg-red-900/50 \";\n                          return {\n                            className,\n                            onClick: () => toggleLine(lineNumber),\n                            style: { cursor: 'pointer' },\n                          };\n                        }}\n                        lineNumberStyle={{ minWidth: 32, color: '#888', textAlign: 'right', userSelect: 'none', marginRight: 16 }}\n                      >\n                        {selectedChallenge.code}\n                      </SyntaxHighlighter>\n                      {/* Show Hints button left-aligned with code block */}\n                      {!submitted && selectedChallenge.hints && (\n                        <div className=\"mt-2\">\n                          <Button variant=\"outline\" size=\"sm\" onClick={() => setShowHints(!showHints)}>\n                            <Lightbulb className=\"h-4 w-4 mr-2\" />\n                            {showHints ? \"Hide Hints\" : \"Show Hints\"}\n                          </Button>\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"mt-4 flex items-center justify-between\">\n                      <div className=\"flex gap-4\">\n                      </div>\n\n                      <div className=\"space-x-2\">\n                        {!submitted || lastSubmissionCorrect === true ? (\n                          <div className=\"flex gap-2\">\n                            {(() => {\n                              const labUrl = selectedChallenge.labUrl || '';\n                              const fullUrl = getDynamicLabUrl(labUrl);\n                              return (\n                                <a\n                                  href={fullUrl || '#'}\n                                  target=\"_blank\"\n                                  rel=\"noopener noreferrer\"\n                                >\n                                  <Button\n                                    type=\"button\"\n                                    className=\"bg-blue-100 text-blue-700 hover:bg-blue-200 border-blue-200\"\n                                    variant=\"outline\"\n                                    disabled={!labUrl}\n                                    title={fullUrl || 'No URL set'}\n                                  >\n                                    Go to Lab\n                                  </Button>\n                                </a>\n                              );\n                            })()}\n                            <Button onClick={handleSubmit} disabled={selectedLines.length === 0 || alreadySolved || attemptsRemaining === 0 || (isLocked && !isAdmin)}>\n                              Submit Answer\n                            </Button>\n                          </div>\n                        ) : (\n                          <Button onClick={handleReset} variant=\"outline\">\n                            Try Again\n                          </Button>\n                        )}\n                      </div>\n                    </div>\n\n                    {/* --- Flag submission for challenge view --- */}\n                    <div className=\"mt-5\">\n                      {/* Only show flag submission form if flag is not already solved */}\n                      {!flagAlreadySolved && (\n                        <form\n                          onSubmit={async (e) => {\n                            e.preventDefault();\n                            if (!flagInput.trim() || flagAlreadySolved || (isLocked && !isAdmin)) return;\n                            setFlagChallengeLoading(true);\n                            setFlagChallengeStatus({ status: 'loading' });\n                            try {\n                              const res = await fetch('/api/submit-flag', {\n                                method: 'POST',\n                                headers: { 'Content-Type': 'application/json' },\n                                body: JSON.stringify({ challengeId: selectedChallenge.id, flag: flagInput.trim(), name: user.name }),\n                              });\n                              const data = await res.json();\n                              if (res.status === 423) {\n                                setFlagChallengeStatus({ status: 'error', message: 'This challenge is currently locked by the admin. You cannot submit flags.' });\n                              } else if (data.success && data.correct) {\n                                setFlagChallengeStatus({ status: 'success', message: data.alreadySolved ? 'Already solved!' : 'Correct flag! +5 points' });\n                                setUser(u => ({ ...u, score: data.score }));\n                                refreshSolvedStates();\n                              } else if (data.success && data.alreadySolved) {\n                                setFlagChallengeStatus({ status: 'already', message: 'Already solved!' });\n                                refreshSolvedStates();\n                              } else {\n                                setFlagChallengeStatus({ status: 'error', message: 'Incorrect flag. Try again.' });\n                              }\n                            } catch {\n                              setFlagChallengeStatus({ status: 'error', message: 'Could not submit flag. Please try again.' });\n                            } finally {\n                              setFlagChallengeLoading(false);\n                            }\n                          }}\n                          className=\"flex items-center gap-2 mb-6\"\n                        >\n                          <input\n                            type=\"text\"\n                            className=\"border rounded px-3 py-2 w-full focus:outline-none focus:ring\"\n                            placeholder=\"Flag here\"\n                            value={flagInput}\n                            onChange={e => setFlagInput(e.target.value)}\n                            disabled={flagChallengeLoading || flagAlreadySolved || (isLocked && !isAdmin)}\n                          />\n                          <Button\n                            type=\"submit\"\n                            className=\"ml-2 h-full bg-green-100 text-green-700 hover:bg-green-200 border-green-200\"\n                            variant=\"outline\"\n                            disabled={flagChallengeLoading || !flagInput.trim() || flagAlreadySolved || (isLocked && !isAdmin)}\n                          >\n                            {flagChallengeLoading ? 'Submitting...' : 'Submit Flag'}\n                          </Button>\n                        </form>\n                      )}\n                      {/* Feedback message/status always shown if not idle */}\n                      {flagChallengeStatus.status !== 'idle' && (\n                        <div className=\"mt-3\">\n                          {flagChallengeStatus.status === 'success' && (\n                            <div className=\"flex items-center gap-2 bg-green-100 border border-green-300 text-green-800 px-4 py-2 rounded shadow-sm animate-fade-in\">\n                              <CheckCircle className=\"h-5 w-5 text-green-500\" />\n                              <span className=\"font-semibold\">{flagChallengeStatus.message}</span>\n                            </div>\n                          )}\n                          {flagChallengeStatus.status === 'error' && (\n                            <div className=\"flex items-center gap-2 bg-red-100 border border-red-300 text-red-800 px-4 py-2 rounded shadow-sm animate-fade-in\">\n                              <XCircle className=\"h-5 w-5 text-red-500\" />\n                              <span className=\"font-semibold\">{flagChallengeStatus.message}</span>\n                            </div>\n                          )}\n                          {flagChallengeStatus.status === 'loading' && (\n                            <div className=\"flex items-center gap-2 bg-gray-100 border border-gray-300 text-gray-800 px-4 py-2 rounded shadow-sm animate-fade-in\">\n                              <span className=\"font-semibold\">Checking flag...</span>\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {/* --- Enhanced 2-column solved status view --- */}\n                      <div className=\"my-8\">\n                        <Card className=\"shadow-md border max-w-2xl mx-auto\">\n                          <CardContent className=\"py-6\">\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                              {/* Challenge Submission Status */}\n                              <div className=\"flex flex-col items-center justify-center text-center\">\n                                <div className=\"mb-2\">\n                                  {alreadySolved ? (\n                                    <CheckCircle className=\"h-10 w-10 text-green-500 transition-transform duration-300 scale-110\" />\n                                  ) : (\n                                    <XCircle className=\"h-10 w-10 text-red-400 transition-transform duration-300 scale-100\" />\n                                  )}\n                                </div>\n                                <span className={`text-base font-semibold mb-1 ${alreadySolved ? 'text-green-700' : 'text-red-700'}`}>Challenge Submission</span>\n                                <span className={`text-xs font-medium mb-2 ${alreadySolved ? 'text-green-600' : 'text-red-500'}`}>{alreadySolved ? 'Solved' : 'Not Solved'}</span>\n                                <span className=\"text-xs text-gray-500\">Select the vulnerable line in the code above.</span>\n                              </div>\n                              {/* Flag Submission Status */}\n                              <div className=\"flex flex-col items-center justify-center text-center\">\n                                <div className=\"mb-2\">\n                                  {flagAlreadySolved ? (\n                                    <CheckCircle className=\"h-10 w-10 text-green-500 transition-transform duration-300 scale-110\" />\n                                  ) : (\n                                    <XCircle className=\"h-10 w-10 text-red-400 transition-transform duration-300 scale-100\" />\n                                  )}\n                                </div>\n                                <span className={`text-base font-semibold mb-1 ${flagAlreadySolved ? 'text-green-700' : 'text-red-700'}`}>Flag Submission</span>\n                                <span className={`text-xs font-medium mb-2 ${flagAlreadySolved ? 'text-green-600' : 'text-red-500'}`}>{flagAlreadySolved ? 'Solved' : 'Not Solved'}</span>\n                                <span className=\"text-xs text-gray-500\">Submit the flag you found in the lab.</span>\n                              </div>\n                            </div>\n                          </CardContent>\n                        </Card>\n                      </div>\n                    </div>\n\n                    {showHints && selectedChallenge.hints && !submitted && (\n                      <div className=\"mt-4 p-4 bg-blue-50 border-l-4 border-blue-400 rounded\">\n                        <h4 className=\"font-medium text-blue-800 mb-2\">💡 Hints:</h4>\n                        <ul className=\"text-sm text-blue-700 space-y-1\">\n                          {selectedChallenge.hints.map((hint, index) => (\n                            <li key={index}>• {hint}</li>\n                          ))}\n                        </ul>\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n              </ResizableCard>\n\n              {showResults && lastSubmissionCorrect && (\n                <Card className=\"mt-5\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <CheckCircle className=\"h-5 w-5 text-green-500\" />\n                      Vulnerability Explanations\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    {/* <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                        <div className=\"text-2xl font-bold text-green-600\">{correctAnswers}</div>\n                        <div className=\"text-sm text-green-700\">Correct</div>\n                      </div>\n                      <div className=\"text-center p-4 bg-red-50 rounded-lg\">\n                        <div className=\"text-2xl font-bold text-red-600\">{incorrectSelections}</div>\n                        <div className=\"text-sm text-red-700\">Incorrect</div>\n                      </div>\n                    </div> */}\n\n                    <div className=\"space-y-3\">\n                      <div className=\"space-y-2\">\n                        {selectedChallenge.vulnerableLines.map((lineNumber) => (\n                          <div key={lineNumber} className=\"p-3 bg-red-50 border-l-4 border-red-400 rounded\">\n                            <p className=\"font-medium text-red-800\">Line {lineNumber}: Vulnerability Found</p>\n                            <p className=\"text-sm text-red-700\">{selectedChallenge.explanations[lineNumber]}</p>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n            </div>\n            {/* Leaderboard on the right */}\n            <div className=\"w-full mt-24 md:w-[400px] flex-shrink-0 md:self-start\">\n              <Leaderboard currentUser={user} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2923, "column": 0}, "map": {"version":3,"sources":["file:///Users/musabkhan/Desktop/Musab/Github/musabkhan/code_review_training/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n    extends React.InputHTMLAttributes<HTMLInputElement> { }\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n    ({ className, type, ...props }, ref) => {\n        return (\n            <input\n                type={type}\n                className={cn(\n                    \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n                    className\n                )}\n                ref={ref}\n                {...props}\n            />\n        )\n    }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EACzB,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC5B,qBACI,8OAAC;QACG,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,gWACA;QAEJ,KAAK;QACJ,GAAG,KAAK;;;;;;AAGrB;AAEJ,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2952, "column": 0}, "map": {"version":3,"sources":["file:///Users/musabkhan/Desktop/Musab/Github/musabkhan/code_review_training/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n    extends React.TextareaHTMLAttributes<HTMLTextAreaElement> { }\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n    ({ className, ...props }, ref) => {\n        return (\n            <textarea\n                className={cn(\n                    \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n                    className\n                )}\n                ref={ref}\n                {...props}\n            />\n        )\n    }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACtB,qBACI,8OAAC;QACG,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,wSACA;QAEJ,KAAK;QACJ,GAAG,KAAK;;;;;;AAGrB;AAEJ,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2980, "column": 0}, "map": {"version":3,"sources":["file:///Users/musabkhan/Desktop/Musab/Github/musabkhan/code_review_training/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n  VariantProps<typeof badgeVariants> { }\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 3022, "column": 0}, "map": {"version":3,"sources":["file:///Users/musabkhan/Desktop/Musab/Github/musabkhan/code_review_training/src/components/admin/challenge-editor.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Badge } from \"@/components/ui/badge\"\nimport {\n    Save,\n    Plus,\n    Trash2,\n    Edit,\n    Eye,\n    Code,\n    AlertTriangle,\n    CheckCircle,\n    XCircle\n} from \"lucide-react\"\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { oneDark } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport type { Challenge } from \"@/types/challenge\"\n\ninterface ChallengeEditorProps {\n    challenges: Challenge[]\n    onSave: (challenge: Challenge) => Promise<void>\n    onDelete: (id: string) => Promise<void>\n    onRefresh: () => void\n}\n\nexport function ChallengeEditor({ challenges, onSave, onDelete, onRefresh }: ChallengeEditorProps) {\n    const [editingChallenge, setEditingChallenge] = useState<Challenge | null>(null)\n    const [isNewChallenge, setIsNewChallenge] = useState(false)\n    const [selectedLines, setSelectedLines] = useState<number[]>([])\n    const [saving, setSaving] = useState(false)\n    const [deleting, setDeleting] = useState(false)\n\n    const [formData, setFormData] = useState({\n        id: \"\",\n        title: \"\",\n        description: \"\",\n        code: \"\",\n        difficulty: \"beginner\" as \"beginner\" | \"intermediate\" | \"advanced\",\n        hints: [] as string[],\n        explanations: {} as Record<number, string>,\n        labUrl: \"\",\n        maxSelectableLines: 1,\n        flag: \"\"\n    })\n\n    const [hintInput, setHintInput] = useState(\"\")\n    const [explanationInput, setExplanationInput] = useState(\"\")\n\n    useEffect(() => {\n        if (editingChallenge) {\n            setFormData({\n                id: editingChallenge.id,\n                title: editingChallenge.title,\n                description: editingChallenge.description,\n                code: editingChallenge.code,\n                difficulty: editingChallenge.difficulty,\n                hints: editingChallenge.hints || [],\n                explanations: editingChallenge.explanations,\n                labUrl: editingChallenge.labUrl || \"\",\n                maxSelectableLines: editingChallenge.maxSelectableLines || 1,\n                flag: editingChallenge.flag || \"\"\n            })\n            setSelectedLines(editingChallenge.vulnerableLines)\n        }\n    }, [editingChallenge])\n\n    const handleNewChallenge = () => {\n        setIsNewChallenge(true)\n        setEditingChallenge(null)\n        setFormData({\n            id: \"\",\n            title: \"\",\n            description: \"\",\n            code: \"\",\n            difficulty: \"beginner\",\n            hints: [],\n            explanations: {},\n            labUrl: \"\",\n            maxSelectableLines: 1,\n            flag: \"\"\n        })\n        setSelectedLines([])\n    }\n\n    const handleEditChallenge = (challenge: Challenge) => {\n        setIsNewChallenge(false)\n        setEditingChallenge(challenge)\n    }\n\n    const handleCancel = () => {\n        setEditingChallenge(null)\n        setIsNewChallenge(false)\n        setSelectedLines([])\n    }\n\n    const handleSave = async () => {\n        if (!formData.id || !formData.title || !formData.code) {\n            alert(\"Please fill in all required fields (ID, Title, Code)\");\n            return;\n        }\n\n        if (selectedLines.length === 0) {\n            alert(\"Please select at least one vulnerable line\");\n            return;\n        }\n\n        setSaving(true);\n        try {\n            const challenge: Challenge = {\n                id: formData.id,\n                title: formData.title,\n                description: formData.description,\n                code: formData.code,\n                vulnerableLines: selectedLines,\n                difficulty: formData.difficulty,\n                hints: formData.hints,\n                explanations: formData.explanations,\n                labUrl: formData.labUrl || undefined,\n                maxSelectableLines: formData.maxSelectableLines,\n                flag: formData.flag || undefined\n            };\n\n            console.log('Saving challenge:', challenge);\n            await onSave(challenge);\n\n            // Show success message\n            alert(isNewChallenge ? \"Challenge created successfully!\" : \"Challenge updated successfully!\");\n\n            handleCancel();\n            onRefresh();\n        } catch (error) {\n            console.error(\"Error saving challenge:\", error);\n            alert(`Error saving challenge: ${error instanceof Error ? error.message : 'Unknown error'}`);\n        } finally {\n            setSaving(false);\n        }\n    };\n\n    const handleDelete = async (id: string) => {\n        const challengeToDelete = challenges.find(c => c.id === id);\n        if (!challengeToDelete) {\n            alert(\"Challenge not found!\");\n            return;\n        }\n\n        // Protect the DEMO challenge\n        if (id === 'DEMO') {\n            const demoConfirm = confirm(\"This is the DEMO challenge that helps new users learn the interface. Are you absolutely sure you want to delete it?\");\n            if (!demoConfirm) return;\n        }\n\n        const confirmMessage = `Are you sure you want to delete \"${challengeToDelete.title}\" (${challengeToDelete.id})?\\n\\nThis action cannot be undone and will permanently remove the challenge from the system.`;\n\n        if (!confirm(confirmMessage)) return;\n\n        setDeleting(true)\n        try {\n            console.log('Deleting challenge:', id);\n            await onDelete(id)\n            alert(`Challenge \"${challengeToDelete.title}\" deleted successfully!`);\n            onRefresh()\n        } catch (error) {\n            console.error(\"Error deleting challenge:\", error)\n            alert(`Error deleting challenge: ${error instanceof Error ? error.message : 'Unknown error'}`)\n        } finally {\n            setDeleting(false)\n        }\n    }\n\n    const toggleLine = (lineNumber: number) => {\n        setSelectedLines(prev =>\n            prev.includes(lineNumber)\n                ? prev.filter(l => l !== lineNumber)\n                : [...prev, lineNumber].sort((a, b) => a - b)\n        )\n    }\n\n    const addHint = () => {\n        if (hintInput.trim()) {\n            setFormData(prev => ({\n                ...prev,\n                hints: [...prev.hints, hintInput.trim()]\n            }))\n            setHintInput(\"\")\n        }\n    }\n\n    const removeHint = (index: number) => {\n        setFormData(prev => ({\n            ...prev,\n            hints: prev.hints.filter((_, i) => i !== index)\n        }))\n    }\n\n    const addExplanation = () => {\n        if (explanationInput.trim() && selectedLines.length > 0) {\n            const lineNumber = selectedLines[selectedLines.length - 1]\n            setFormData(prev => ({\n                ...prev,\n                explanations: {\n                    ...prev.explanations,\n                    [lineNumber]: explanationInput.trim()\n                }\n            }))\n            setExplanationInput(\"\")\n        }\n    }\n\n    const removeExplanation = (lineNumber: number) => {\n        setFormData(prev => {\n            const newExplanations = { ...prev.explanations }\n            delete newExplanations[lineNumber]\n            return { ...prev, explanations: newExplanations }\n        })\n    }\n\n    const codeLines = formData.code.split(\"\\n\")\n\n    return (\n        <div className=\"space-y-6\">\n            {/* Header */}\n            <div className=\"flex justify-between items-center\">\n                <div>\n                    <h2 className=\"text-2xl font-bold\">Challenge Editor</h2>\n                    <p className=\"text-sm text-gray-600 mt-1\">\n                        {challenges.length} challenge{challenges.length !== 1 ? 's' : ''} total\n                    </p>\n                </div>\n                <div className=\"flex gap-2\">\n                    <Button onClick={handleNewChallenge} variant=\"outline\">\n                        <Plus className=\"h-4 w-4 mr-2\" />\n                        New Challenge\n                    </Button>\n                    <Button onClick={onRefresh} variant=\"outline\">\n                        Refresh\n                    </Button>\n                    {challenges.length > 1 && (\n                        <Button\n                            onClick={async () => {\n                                const confirmDelete = confirm(\n                                    `Are you sure you want to delete ALL ${challenges.length} challenges?\\n\\n` +\n                                    `This will permanently remove all challenges except the DEMO challenge.\\n\\n` +\n                                    `This action cannot be undone!`\n                                );\n\n                                if (confirmDelete) {\n                                    setDeleting(true);\n                                    try {\n                                        // Delete all challenges except DEMO\n                                        const challengesToDelete = challenges.filter(c => c.id !== 'DEMO');\n                                        let deletedCount = 0;\n\n                                        for (const challenge of challengesToDelete) {\n                                            try {\n                                                await onDelete(challenge.id);\n                                                deletedCount++;\n                                            } catch (error) {\n                                                console.error(`Failed to delete ${challenge.id}:`, error);\n                                            }\n                                        }\n\n                                        if (deletedCount > 0) {\n                                            alert(`Successfully deleted ${deletedCount} challenge${deletedCount !== 1 ? 's' : ''}!`);\n                                            onRefresh();\n                                        }\n                                    } catch (error) {\n                                        console.error('Error deleting challenges:', error);\n                                        alert('Error deleting challenges: ' + error);\n                                    } finally {\n                                        setDeleting(false);\n                                    }\n                                }\n                            }}\n                            variant=\"destructive\"\n                            disabled={deleting}\n                        >\n                            <Trash2 className=\"h-4 w-4 mr-2\" />\n                            {deleting ? \"Deleting...\" : \"Delete All\"}\n                        </Button>\n                    )}\n                </div>\n            </div>\n\n            {/* Challenge List */}\n            {!editingChallenge && !isNewChallenge && (\n                <div>\n                    {challenges.length === 0 ? (\n                        <div className=\"text-center py-8\">\n                            <p className=\"text-gray-500 mb-4\">No challenges found. Loading...</p>\n                            <Button onClick={onRefresh} variant=\"outline\">\n                                Refresh Challenges\n                            </Button>\n                        </div>\n                    ) : (\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                            {challenges.map((challenge) => (\n                                <Card key={challenge.id} className=\"hover:shadow-md transition-shadow\">\n                                    <CardHeader>\n                                        <CardTitle className=\"flex items-center justify-between\">\n                                            <span className=\"truncate\">{challenge.title}</span>\n                                            <Badge variant={challenge.difficulty === \"beginner\" ? \"default\" : challenge.difficulty === \"intermediate\" ? \"secondary\" : \"destructive\"}>\n                                                {challenge.difficulty}\n                                            </Badge>\n                                        </CardTitle>\n                                        <CardDescription className=\"line-clamp-2\">{challenge.description}</CardDescription>\n                                    </CardHeader>\n                                    <CardContent>\n                                        <div className=\"flex gap-2\">\n                                            <Button onClick={() => handleEditChallenge(challenge)} size=\"sm\">\n                                                <Edit className=\"h-4 w-4 mr-1\" />\n                                                Edit\n                                            </Button>\n                                            <Button\n                                                onClick={() => handleDelete(challenge.id)}\n                                                size=\"sm\"\n                                                variant={challenge.id === 'DEMO' ? \"outline\" : \"destructive\"}\n                                                disabled={deleting}\n                                                className={challenge.id === 'DEMO' ? \"border-orange-500 text-orange-600 hover:bg-orange-50 hover:text-orange-700\" : \"\"}\n                                                title={challenge.id === 'DEMO' ? \"DEMO challenge helps new users learn the interface\" : \"Delete this challenge\"}\n                                            >\n                                                <Trash2 className=\"h-4 w-4 mr-1\" />\n                                                {deleting ? \"Deleting...\" : (challenge.id === 'DEMO' ? \"Delete Demo\" : \"Delete\")}\n                                            </Button>\n                                        </div>\n                                        <div className=\"mt-2 text-sm text-gray-600\">\n                                            Vulnerable lines: {challenge.vulnerableLines.join(\", \")}\n                                        </div>\n                                        {challenge.id === 'DEMO' && (\n                                            <div className=\"mt-2 p-2 bg-orange-50 border border-orange-200 rounded text-xs text-orange-700\">\n                                                ⚠️ Demo challenge - helps new users learn the interface\n                                            </div>\n                                        )}\n                                    </CardContent>\n                                </Card>\n                            ))}\n                        </div>\n                    )}\n                </div>\n            )}\n\n            {/* Challenge Form */}\n            {(editingChallenge || isNewChallenge) && (\n                <Card>\n                    <CardHeader>\n                        <CardTitle className=\"flex items-center gap-2\">\n                            {isNewChallenge ? (\n                                <>\n                                    <Plus className=\"h-5 w-5 text-green-500\" />\n                                    Create New Challenge\n                                </>\n                            ) : (\n                                <>\n                                    <Edit className=\"h-5 w-5 text-blue-500\" />\n                                    Edit Challenge: {editingChallenge?.title}\n                                </>\n                            )}\n                        </CardTitle>\n                        <CardDescription>\n                            {isNewChallenge\n                                ? \"Fill in the challenge details and select vulnerable lines in the code\"\n                                : \"Modify the challenge details and vulnerable lines\"\n                            }\n                        </CardDescription>\n                    </CardHeader>\n                    <CardContent className=\"space-y-6\">\n                        {/* Basic Info */}\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div>\n                                <label className=\"block text-sm font-medium mb-2\">Challenge ID *</label>\n                                <Input\n                                    value={formData.id}\n                                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => setFormData(prev => ({ ...prev, id: e.target.value }))}\n                                    placeholder=\"e.g., CHALLENGE1\"\n                                    disabled={!isNewChallenge}\n                                />\n                            </div>\n                            <div>\n                                <label className=\"block text-sm font-medium mb-2\">Difficulty</label>\n                                <select\n                                    value={formData.difficulty}\n                                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setFormData(prev => ({ ...prev, difficulty: e.target.value as any }))}\n                                    className=\"w-full border rounded-md px-3 py-2\"\n                                >\n                                    <option value=\"beginner\">Beginner</option>\n                                    <option value=\"intermediate\">Intermediate</option>\n                                    <option value=\"advanced\">Advanced</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        <div>\n                            <label className=\"block text-sm font-medium mb-2\">Title *</label>\n                            <Input\n                                value={formData.title}\n                                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n                                placeholder=\"Challenge title\"\n                            />\n                        </div>\n\n                        <div>\n                            <label className=\"block text-sm font-medium mb-2\">Description</label>\n                            <Textarea\n                                value={formData.description}\n                                onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n                                placeholder=\"Challenge description\"\n                                rows={3}\n                            />\n                        </div>\n\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div>\n                                <label className=\"block text-sm font-medium mb-2\">Lab URL</label>\n                                <Input\n                                    value={formData.labUrl}\n                                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => setFormData(prev => ({ ...prev, labUrl: e.target.value }))}\n                                    placeholder=\"https://example.com/lab\"\n                                />\n                            </div>\n                            <div>\n                                <label className=\"block text-sm font-medium mb-2\">Max Selectable Lines</label>\n                                <Input\n                                    type=\"number\"\n                                    min=\"1\"\n                                    value={formData.maxSelectableLines}\n                                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => setFormData(prev => ({ ...prev, maxSelectableLines: parseInt(e.target.value) || 1 }))}\n                                />\n                            </div>\n                        </div>\n\n                        <div>\n                            <label className=\"block text-sm font-medium mb-2\">Flag</label>\n                            <Input\n                                value={formData.flag}\n                                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setFormData(prev => ({ ...prev, flag: e.target.value }))}\n                                placeholder=\"flag{your-flag-here}\"\n                            />\n                        </div>\n\n                        {/* Code Editor */}\n                        <div>\n                            <label className=\"block text-sm font-medium mb-2\">Code *</label>\n                            <Textarea\n                                value={formData.code}\n                                onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => setFormData(prev => ({ ...prev, code: e.target.value }))}\n                                placeholder=\"Paste your code here...\"\n                                rows={15}\n                                className=\"font-mono text-sm bg-gray-900 text-gray-100 border-gray-700 focus:border-blue-500 focus:ring-blue-500\"\n                                style={{\n                                    fontFamily: 'ui-monospace, SFMono-Regular, \"SF Mono\", Consolas, \"Liberation Mono\", Menlo, monospace',\n                                    lineHeight: '1.5'\n                                }}\n                            />\n                            <div className=\"mt-2 text-sm text-gray-600\">\n                                After pasting your code, click on the line numbers below to mark them as vulnerable.\n                            </div>\n\n                            {/* Code Preview with Line Selection */}\n                            {formData.code && (\n                                <div className=\"mt-4\">\n                                    <label className=\"block text-sm font-medium mb-2\">Select Vulnerable Lines:</label>\n                                    <div className=\"border rounded-lg overflow-hidden bg-gray-900\">\n                                        <SyntaxHighlighter\n                                            language=\"javascript\"\n                                            style={oneDark}\n                                            customStyle={{ background: 'transparent', fontSize: 14, margin: 0, padding: 16 }}\n                                            showLineNumbers\n                                            wrapLines\n                                            lineProps={(lineNumber: number) => {\n                                                const isSelected = selectedLines.includes(lineNumber)\n                                                let className = \"cursor-pointer transition-colors \"\n                                                if (isSelected) className += \"bg-blue-900/50 \"\n                                                return {\n                                                    className,\n                                                    onClick: () => toggleLine(lineNumber),\n                                                    style: { cursor: 'pointer' },\n                                                }\n                                            }}\n                                            lineNumberStyle={{ minWidth: 32, color: '#888', textAlign: 'right', userSelect: 'none', marginRight: 16 }}\n                                        >\n                                            {formData.code}\n                                        </SyntaxHighlighter>\n                                    </div>\n                                    <div className=\"mt-2 text-sm text-gray-600\">\n                                        Selected vulnerable lines: {selectedLines.length > 0 ? selectedLines.join(\", \") : \"None selected\"}\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n\n                        {/* Hints */}\n                        <div>\n                            <label className=\"block text-sm font-medium mb-2\">Hints</label>\n                            <div className=\"flex gap-2 mb-2\">\n                                <Input\n                                    value={hintInput}\n                                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => setHintInput(e.target.value)}\n                                    placeholder=\"Add a hint\"\n                                    onKeyDown={(e: React.KeyboardEvent<HTMLInputElement>) => e.key === 'Enter' && addHint()}\n                                />\n                                <Button onClick={addHint} size=\"sm\">Add</Button>\n                            </div>\n                            <div className=\"space-y-2\">\n                                {formData.hints.map((hint, index) => (\n                                    <div key={index} className=\"flex items-center gap-2 p-2 bg-gray-50 rounded\">\n                                        <span className=\"flex-1\">{hint}</span>\n                                        <Button onClick={() => removeHint(index)} size=\"sm\" variant=\"outline\">\n                                            <Trash2 className=\"h-4 w-4\" />\n                                        </Button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n\n                        {/* Explanations */}\n                        <div>\n                            <label className=\"block text-sm font-medium mb-2\">Line Explanations</label>\n                            <div className=\"flex gap-2 mb-2\">\n                                <Input\n                                    value={explanationInput}\n                                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => setExplanationInput(e.target.value)}\n                                    placeholder=\"Explanation for selected line\"\n                                    onKeyDown={(e: React.KeyboardEvent<HTMLInputElement>) => e.key === 'Enter' && addExplanation()}\n                                />\n                                <Button onClick={addExplanation} size=\"sm\" disabled={selectedLines.length === 0}>\n                                    Add for Line {selectedLines[selectedLines.length - 1]}\n                                </Button>\n                            </div>\n                            <div className=\"space-y-2\">\n                                {Object.entries(formData.explanations).map(([line, explanation]) => (\n                                    <div key={line} className=\"flex items-center gap-2 p-2 bg-gray-50 rounded\">\n                                        <Badge variant=\"outline\">Line {line}</Badge>\n                                        <span className=\"flex-1\">{explanation}</span>\n                                        <Button onClick={() => removeExplanation(parseInt(line))} size=\"sm\" variant=\"outline\">\n                                            <Trash2 className=\"h-4 w-4\" />\n                                        </Button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n\n                        {/* Actions */}\n                        <div className=\"flex gap-2 justify-end\">\n                            <Button onClick={handleCancel} variant=\"outline\">\n                                Cancel\n                            </Button>\n                            <Button onClick={handleSave} disabled={saving}>\n                                <Save className=\"h-4 w-4 mr-2\" />\n                                {saving ? \"Saving...\" : (isNewChallenge ? \"Create Challenge\" : \"Update Challenge\")}\n                            </Button>\n                        </div>\n\n                        {/* Debug Section - Only show in development */}\n                        {process.env.NODE_ENV === 'development' && (\n                            <div className=\"mt-4 p-4 bg-gray-100 rounded-lg\">\n                                <h4 className=\"font-medium text-gray-800 mb-2\">Debug Info:</h4>\n                                <div className=\"text-sm text-gray-600 space-y-1\">\n                                    <div>Mode: {isNewChallenge ? 'Create' : 'Edit'}</div>\n                                    <div>Challenge ID: {formData.id}</div>\n                                    <div>Selected Lines: {selectedLines.join(', ') || 'None'}</div>\n                                    <div>Code Length: {formData.code.length} characters</div>\n                                    <Button\n                                        onClick={async () => {\n                                            try {\n                                                const res = await fetch('/api/admin/challenges');\n                                                const data = await res.json();\n                                                console.log('Current challenges:', data);\n                                                alert(`Found ${data.length} challenges`);\n                                            } catch (error) {\n                                                console.error('Debug error:', error);\n                                                alert('Debug error: ' + error);\n                                            }\n                                        }}\n                                        size=\"sm\"\n                                        variant=\"outline\"\n                                    >\n                                        Test API Connection\n                                    </Button>\n                                </div>\n                            </div>\n                        )}\n                    </CardContent>\n                </Card>\n            )}\n        </div>\n    )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4252, "column": 0}, "map": {"version":3,"sources":["file:///Users/musabkhan/Desktop/Musab/Github/musabkhan/code_review_training/src/components/ui/user-count.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { io, Socket } from 'socket.io-client';\nimport { Users } from 'lucide-react';\n\nconst SOCKET_URL = process.env.NEXT_PUBLIC_SOCKET_URL || 'http://localhost:4001';\nconst USER_ID_KEY = 'ssrf-lab-user-id';\nconst CHANNEL_NAME = 'ssrf-lab-user-channel';\n\nexport const UserCount: React.FC<{ isAdmin?: boolean }> = ({ isAdmin = false }) => {\n  console.log(\"User Count Socket\", SOCKET_URL)\n  const [userCount, setUserCount] = useState<number>(1);\n  const [isLeader, setIsLeader] = useState(false);\n  const [userId, setUserId] = useState<string | null>(null);\n  const socketRef = useRef<Socket | null>(null);\n  const channelRef = useRef<BroadcastChannel | null>(null);\n\n  // Get or create userId on client only\n  useEffect(() => {\n    if (typeof window === 'undefined') return;\n    let id = localStorage.getItem(USER_ID_KEY);\n    if (!id) {\n      // Simple generic random string generator (not cryptographically secure)\n      id = Math.random().toString(36).substr(2, 9) + Date.now().toString(36);\n      localStorage.setItem(USER_ID_KEY, id);\n    }\n    setUserId(id);\n  }, []);\n\n  // Tab coordination and leader election (only for non-admins)\n  useEffect(() => {\n    if (!userId || isAdmin) return;\n    const channel = new BroadcastChannel(CHANNEL_NAME);\n    channelRef.current = channel;\n    let leader = false;\n    let leaderTimeout: NodeJS.Timeout | null = null;\n\n    function claimLeadership() {\n      channel.postMessage({ type: 'claim-leader', from: userId });\n      leaderTimeout = setTimeout(() => {\n        if (!leader) {\n          leader = true;\n          setIsLeader(true);\n        }\n      }, 500);\n    }\n\n    function handleMessage(e: MessageEvent) {\n      const msg = e.data;\n      if (msg.type === 'claim-leader' && msg.from !== userId) {\n        if (leader) {\n          leader = false;\n          setIsLeader(false);\n        }\n        channel.postMessage({ type: 'leader-exists', from: userId });\n      } else if (msg.type === 'leader-exists' && msg.from !== userId) {\n        if (leaderTimeout) clearTimeout(leaderTimeout);\n        leader = false;\n        setIsLeader(false);\n      }\n    }\n\n    channel.addEventListener('message', handleMessage);\n    claimLeadership();\n\n    const onUnload = () => {\n      if (leader) {\n        channel.postMessage({ type: 'leader-gone', from: userId });\n      }\n    };\n    window.addEventListener('beforeunload', onUnload);\n\n    return () => {\n      channel.close();\n      window.removeEventListener('beforeunload', onUnload);\n      if (leaderTimeout) clearTimeout(leaderTimeout);\n    };\n  }, [userId, isAdmin]);\n\n  // Socket connection and user count updates\n  useEffect(() => {\n    if (!userId) return;\n    const socket = io(SOCKET_URL, { transports: ['websocket'] });\n    socketRef.current = socket;\n    if (isAdmin) {\n      // Admin: only listen for userCount, do not register as a player\n      socket.on('userCount', (count: number) => {\n        setUserCount(count);\n      });\n    } else {\n      if (!isLeader) {\n        const channel = channelRef.current;\n        function handleMessage(e: MessageEvent) {\n          const msg = e.data;\n          if (msg.type === 'user-count-update') {\n            setUserCount(msg.count);\n          }\n        }\n        channel?.addEventListener('message', handleMessage);\n        return () => channel?.removeEventListener('message', handleMessage);\n      }\n      socket.on('connect', () => {\n        socket.emit('register', userId, false); // not admin\n      });\n      socket.on('userCount', (count: number) => {\n        setUserCount(count);\n        channelRef.current?.postMessage({ type: 'user-count-update', count });\n      });\n    }\n    return () => {\n      socket.disconnect();\n      socketRef.current = null;\n    };\n  }, [isLeader, userId, isAdmin]);\n\n  if (!userId) return null;\n\n  return (\n    <div className=\"fixed top-4 left-4 z-50 flex items-center gap-2 bg-white/80 shadow rounded-full px-4 py-2 border border-gray-200\">\n      <Users className=\"w-5 h-5 text-primary\" />\n      <span className=\"text-base font-bold text-primary\">{userCount}</span>\n    </div>\n  );\n};\n\nexport default UserCount; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4417, "column": 0}, "map": {"version":3,"sources":["file:///Users/musabkhan/Desktop/Musab/Github/musabkhan/code_review_training/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n    React.ElementRef<typeof TabsPrimitive.List>,\n    React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n    <TabsPrimitive.List\n        ref={ref}\n        className={cn(\n            \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n            className\n        )}\n        {...props}\n    />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n    React.ElementRef<typeof TabsPrimitive.Trigger>,\n    React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n    <TabsPrimitive.Trigger\n        ref={ref}\n        className={cn(\n            \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n            className\n        )}\n        {...props}\n    />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n    React.ElementRef<typeof TabsPrimitive.Content>,\n    React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n    <TabsPrimitive.Content\n        ref={ref}\n        className={cn(\n            \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n            className\n        )}\n        {...props}\n    />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC,gKAAA,CAAA,OAAkB;QACf,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,8FACA;QAEH,GAAG,KAAK;;;;;;AAGjB,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC,gKAAA,CAAA,UAAqB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,uYACA;QAEH,GAAG,KAAK;;;;;;AAGjB,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC,gKAAA,CAAA,UAAqB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACR,mIACA;QAEH,GAAG,KAAK;;;;;;AAGjB,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 4470, "column": 0}, "map": {"version":3,"sources":["file:///Users/musabkhan/Desktop/Musab/Github/musabkhan/code_review_training/src/app/admin/dashboard/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { AdminPanel } from \"@/components/code-review-challenge\"\nimport { ChallengeEditor } from \"@/components/admin/challenge-editor\"\nimport { UserCount } from \"@/components/ui/user-count\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport {\n  Settings,\n  Code,\n  Users,\n  BarChart3,\n  Lock,\n  LogOut\n} from \"lucide-react\"\nimport { io } from 'socket.io-client'\nimport type { Challenge } from \"@/types/challenge\"\n\nconst SOCKET_URL = process.env.NEXT_PUBLIC_SOCKET_URL || 'http://localhost:4001';\n\nexport default function AdminDashboard() {\n  console.log(\"Admin Socket: \", SOCKET_URL)\n  const [locks, setLocks] = useState<Record<string, boolean>>({});\n  const [challenges, setChallenges] = useState<Challenge[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState(\"challenges\");\n  const router = useRouter();\n\n  // Debug challenges state\n  useEffect(() => {\n    console.log('Admin Dashboard - Challenges state changed:', {\n      challengesLength: challenges.length,\n      loading,\n      challenges: challenges\n    });\n  }, [challenges, loading]);\n\n  useEffect(() => {\n    // Only allow access if admin session\n    fetch(`/api/admin-login`, { method: 'GET' })\n      .then(res => res.json())\n      .then(data => {\n        if (!data.authenticated) {\n          router.replace(\"/admin\");\n        } else {\n          // Fetch locks from API\n          fetch(`/api/challenge-locks`)\n            .then(res => res.json())\n            .then(data => setLocks(data));\n\n          // Fetch challenges\n          fetchChallenges();\n        }\n        setLoading(false);\n      });\n  }, [router]);\n\n  const fetchChallenges = async () => {\n    try {\n      console.log('Fetching challenges...');\n      const res = await fetch('/api/admin/challenges');\n      console.log('Response status:', res.status);\n\n      if (res.ok) {\n        const data = await res.json();\n        console.log('Challenges fetched:', data);\n        setChallenges(data);\n      } else {\n        console.error('Failed to fetch challenges:', res.status, res.statusText);\n        const errorData = await res.json().catch(() => ({}));\n        console.error('Error data:', errorData);\n      }\n    } catch (error) {\n      console.error('Error fetching challenges:', error);\n    }\n  };\n\n  const handleToggleLock = async (id: string) => {\n    try {\n      const isLocked = locks[id] !== false;\n      const newLocked = !isLocked;\n\n      // Optimistically update UI\n      setLocks(prev => ({ ...prev, [id]: newLocked }));\n\n      console.log('Toggling lock for challenge:', id, 'new state:', newLocked);\n\n      const response = await fetch(`/api/challenge-locks`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ id, locked: newLocked })\n      });\n\n      if (!response.ok) {\n        console.error('Failed to update lock:', response.status, response.statusText);\n        // Revert optimistic update\n        setLocks(prev => ({ ...prev, [id]: isLocked }));\n        return;\n      }\n\n      console.log('Lock updated successfully');\n\n      // Reset timer if locking the challenge\n      if (newLocked) {\n        try {\n          const socket = io(SOCKET_URL, { transports: ['websocket'] });\n          socket.emit('admin:resetTimer', { challengeId: id });\n          socket.disconnect();\n        } catch (socketError) {\n          console.error('Socket error:', socketError);\n        }\n      }\n    } catch (error) {\n      console.error('Error toggling lock:', error);\n      // Revert optimistic update on error\n      const isLocked = locks[id] !== false;\n      setLocks(prev => ({ ...prev, [id]: isLocked }));\n    }\n  };\n\n  const handleSaveChallenge = async (challenge: Challenge) => {\n    try {\n      const existingChallenge = challenges.find(c => c.id === challenge.id);\n      const method = existingChallenge ? 'PUT' : 'POST';\n\n      console.log('Saving challenge:', { method, challengeId: challenge.id, existing: !!existingChallenge });\n\n      const res = await fetch('/api/admin/challenges', {\n        method,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(challenge),\n      });\n\n      const responseData = await res.json();\n\n      if (!res.ok) {\n        console.error('API Error:', responseData);\n        throw new Error(responseData.error || 'Failed to save challenge');\n      }\n\n      console.log('Challenge saved successfully:', responseData);\n      await fetchChallenges();\n    } catch (error) {\n      console.error('Error saving challenge:', error);\n      throw error;\n    }\n  };\n\n  const handleDeleteChallenge = async (id: string) => {\n    try {\n      const res = await fetch(`/api/admin/challenges?id=${id}`, {\n        method: 'DELETE',\n      });\n\n      if (!res.ok) {\n        throw new Error('Failed to delete challenge');\n      }\n\n      await fetchChallenges();\n    } catch (error) {\n      console.error('Error deleting challenge:', error);\n      throw error;\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await fetch('/api/admin-login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ logout: true }),\n        credentials: 'include',\n      });\n      router.replace('/admin');\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n\n  if (loading) return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n      <div className=\"text-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n        <p className=\"mt-4 text-gray-600\">Loading admin dashboard...</p>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center\">\n              <h1 className=\"text-xl font-semibold text-gray-900\">Admin Dashboard</h1>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <UserCount isAdmin={true} />\n              <Button onClick={handleLogout} variant=\"outline\" size=\"sm\">\n                <LogOut className=\"h-4 w-4 mr-2\" />\n                Logout\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\n          <TabsList className=\"grid w-full grid-cols-3\">\n            <TabsTrigger value=\"challenges\" className=\"flex items-center gap-2\">\n              <Code className=\"h-4 w-4\" />\n              Challenges\n            </TabsTrigger>\n            <TabsTrigger value=\"locks\" className=\"flex items-center gap-2\">\n              <Lock className=\"h-4 w-4\" />\n              Challenge Locks\n            </TabsTrigger>\n            <TabsTrigger value=\"analytics\" className=\"flex items-center gap-2\">\n              <BarChart3 className=\"h-4 w-4\" />\n              Analytics\n            </TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"challenges\" className=\"space-y-6\">\n            <ChallengeEditor\n              challenges={challenges}\n              onSave={handleSaveChallenge}\n              onDelete={handleDeleteChallenge}\n              onRefresh={fetchChallenges}\n            />\n          </TabsContent>\n\n          <TabsContent value=\"locks\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Lock className=\"h-5 w-5\" />\n                  Challenge Lock Management\n                </CardTitle>\n                <CardDescription>\n                  Lock or unlock challenges to control user access\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                {console.log('Rendering AdminPanel with:', { locks, challengesLength: challenges.length, challenges })}\n                <AdminPanel locks={locks} onToggleLock={handleToggleLock} challenges={challenges} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"analytics\" className=\"space-y-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <BarChart3 className=\"h-5 w-5\" />\n                  Analytics Dashboard\n                </CardTitle>\n                <CardDescription>\n                  View user statistics and challenge performance\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-center py-8 text-gray-500\">\n                  Analytics dashboard coming soon...\n                  <br />\n                  This will include user statistics, challenge completion rates, and performance metrics.\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}